#
# Logging settings.
#
logging:
  # Sets the logging level for Hibernate's SQL statements to DEBUG.
  # This displays all SQL queries executed by the application, which is useful for debugging.
  level:
    org.hibernate.SQL: DEBUG

#
# Server settings.
#
server:
  error:
    # Disables Spring Boot's default "whitelabel" error page.
    # This is necessary for implementing custom error pages.
    whitelabel:
      enabled: false

#
# Spring Boot settings.
#
spring:
  # Spring Data settings
  data:
  # Web-related settings (request handling)
    web:
      # Pagination settings
      pageable:
        # Setting one-indexed-parameters to 'true' tells Spring to treat
        # page numbers in URL parameters as one-based (e.g., ?page=1).
        # By default(false), Spring expects pagination to be zero-based.
        #
        # Note: The application's internal logic (Pageable, PageRequest)
        # will still use zero-based indexing. This setting only affects
        # how Spring converts the HTTP request parameter into the Pageable object.
        one-indexed-parameters: true
  # Database connection settings.
  datasource:
    # The URL for the PostgreSQL database connection.
    url: jdbc:postgresql://localhost:5432/bookstore_bh
    # The username for the database connection.
    username: postgres
    # The password for the database connection.
    password: root
    # The JDBC driver class name.
    driver-class-name: org.postgresql.Driver
    # HikariCP connection pool settings.
    hikari:
      # The maximum number of connections in the pool.
      maximum-pool-size: 10
      # The minimum number of idle connections to maintain.
      minimum-idle: 5
      # The maximum time (in milliseconds) a connection can remain idle.
      idle-timeout: 600000
  # JPA (Java Persistence API) settings.
  jpa:
    # Disables the "Open Session in View" pattern to prevent performance issues and lazy loading problems.
    open-in-view: false
    hibernate:
      # Sets the DDL generation mode. 'validate' checks that the schema matches the models but does not change it.
      ddl-auto: validate
      # Enables logging of all SQL statements generated by Hibernate to the console.
      show-sql: true
    properties:
      hibernate:
        transaction:
          jta:
            # Specifies the JTA platform for transaction management.
            platform: org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform

  # Spring MVC settings for controllers and views.
  mvc:
    view:
      # The prefix for the paths to view files (JSPs).
      prefix: /WEB-INF/jsp/
      # The suffix (extension) for view files.
      suffix: .jsp
    # Throws an exception if a handler is not found for a request, allowing for custom 404 error handling.
    throw-exception-if-no-handler-found: true

#
# Custom filter settings.
#
filter:
  # The authentication filter (checks if a user is logged in).
  authentication:
    # Applies the filter to all URL paths.
    url-patterns:
      - /*
    # A list of paths (regex) that are public and accessible to everyone.
    public-paths:
      - /
      - /books
      - /books/
      - /books/\d+
      - /books/\d+/
      - /register
      - /register/
      - ^/cart/.*
      - ^/cart/?
    # A list of paths that require authentication.
    private-paths:
      - /profile
      - /profile/.*
      - /logout
      - /users
      - /users/.*
      - /ordered
      - /ordered/.*
      - /orders
      - /orders/.*
      - /books/add
      - /books/add/
      - /books/edit/.*
      - /books/delete/.*
    # A list of authentication-related paths.
    # Logged-in users will be redirected from these pages.
    auth-paths:
      - /login
      - /login/
    # A list of paths to static resources that are always accessible.
    static-resources:
      - /images/.*
      - /css/.*
      - /js/.*
      - .*\.css
      - .*\.js
      - .*\.png
      - .*\.jpg
      - .*\.bmp
  # The authorization filter (checks access rights based on roles).
  authorization:
    # Applies the filter to the specified URL paths.
    url-patterns:
      - /orders/*
      - /ordered
      - /ordered/*
      - /users/*
      - /books/add/*
      - /books/\\d+/*
      - /profile/*
      - /cart
      - /cart/*
    # Rules for allowed paths.
    allowed-paths:
      # Paths accessible only to roles in the 'super-admin' group.
      super-admin:
        - ^/users/delete/.*
      # Paths accessible to roles in the 'admin' group.
      admin:
        - ^/users/edit/.*
        - ^/users/add/.*
        - ^/orders/archive/.*
      # Paths accessible to roles in the 'manager' group.
      manager:
        - ^/books/edit/.*
        - ^/books/delete/.*
        - ^/books/add?
        - ^/books/add/.*
        - ^/orders?
        - ^/orders/?
        - ^/orders/approve/.*
        - ^/users?
        - ^/users/\d+/?
      # Paths accessible to roles in the 'customer' group.
      customer:
        - ^/profile/.*
        - ^/orders/cancel/.*
    # Rules for denied paths (override allowed paths).
    denied-paths:
      # Roles in the 'manager-denied' group cannot access these paths.
      manager-denied:
        - ^/cart/.*
        - ^/cart/?
        - ^/ordered
        - ^/ordered/.*
    # Paths accessible to unauthenticated users (guests).
    guest-allowed-paths:
      - ^/cart$
      - ^/cart/.*
      - ^/cart/$
    # Role mapping for creating an access hierarchy.
    role-mapping:
      # The 'super-admin' role includes only SUPER_ADMIN.
      super-admin:
        - SUPER_ADMIN
      # The 'admin' role includes SUPER_ADMIN and ADMIN.
      admin:
        - SUPER_ADMIN
        - ADMIN
      # The 'manager' role includes SUPER_ADMIN, ADMIN, and MANAGER.
      manager:
        - SUPER_ADMIN
        - ADMIN
        - MANAGER
      # The 'customer' role includes all roles.
      customer:
        - SUPER_ADMIN
        - ADMIN
        - MANAGER
        - CUSTOMER
      # The 'manager-denied' role includes only MANAGER, for which a denial is set.
      manager-denied:
        - MANAGER